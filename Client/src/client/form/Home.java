package client.form;

import client.component.Theme;
import client.event.PublicEvent;
import client.login.PasswordManager;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.Socket;
import net.miginfocom.swing.MigLayout;

public class Home extends javax.swing.JLayeredPane {

   private static final int PORT = 2222;
   private static String ip = "192.168.137.1";
   public static Socket serverSocket;
   public static BufferedWriter out;
   public static Menu_Left menuLeft;

   public Home() {
      initComponents();
      init();
      connectToChatRelayServer();
      setBackground(Theme.getTheme());
   }

   public static void connectToChatRelayServer() {
      //connection with Chat Relay Server
      try {
         Socket socket = new Socket(Home.ip, Home.PORT);
         Home.serverSocket = socket;
         try {
            BufferedWriter os = new BufferedWriter(new OutputStreamWriter(Home.serverSocket.getOutputStream()));
            os.write(PasswordManager.getId());
            os.newLine();
            os.flush();
            Home.out = os;
            new Thread(() -> {
               try (BufferedReader in = new BufferedReader(new InputStreamReader(Home.serverSocket.getInputStream()))) {
                  String rmsg;
                  String sender_id;
                  while (true) {
                     sender_id = in.readLine();
                     rmsg = in.readLine();
                     PublicEvent.getInstance().getEventChat().receiveMessage(sender_id, rmsg);
                  }
               } catch (IOException e) {
                  System.err.println("Chat Relay Server went offline!");
               }
            }).start();
         } catch (IOException e) {
            System.err.println("Couldn't register online prsence to Chat Relay Server");
         }
      } catch (IOException e) {
         System.out.println("Couldn't connect to Chat Relay Server");
         e.printStackTrace();
      }
   }

   public void init() {
      setLayout(new MigLayout("fillx, filly", "0[fill,35%]0[fill, 65%]0", "0[fill]0"));
      menuLeft = new Menu_Left();
      this.add(menuLeft);
      this.add(new Chat());
      //      setOpaque(false);   

   }

   /**
    * This method is called from within the constructor to initialize the form. WARNING:
    * Do NOT modify this code. The content of this method is always regenerated by the
    * Form Editor.
    */
   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));
        setOpaque(true);
        setPreferredSize(new java.awt.Dimension(1007, 551));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 394, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 324, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
